// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using desafio_backend.Infrastructure.Persistence;

#nullable disable

namespace desafio_backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240219120534_basepedidos")]
    partial class basepedidos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("desafio_backend.Domain.Entities.EstadoDelPedido", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id");

                    b.ToTable("estadoDelPedido", (string)null);
                });

            modelBuilder.Entity("desafio_backend.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CicloDelPedido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cicloDelPedido");

                    b.Property<long?>("CodigoDeContratoInterno")
                        .HasColumnType("bigint")
                        .HasColumnName("codigoDeContratoInterno");

                    b.Property<DateOnly?>("Cuando")
                        .HasColumnType("date")
                        .HasColumnName("cuando");

                    b.Property<string>("CuentaCorriente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cuentaCorriente");

                    b.Property<int?>("EstadoDelPedido")
                        .HasColumnType("int")
                        .HasColumnName("estadoDelPedido");

                    b.Property<int?>("NumeroDePedido")
                        .HasColumnType("int")
                        .HasColumnName("numeroDePedido");

                    b.HasKey("Id");

                    b.HasIndex("EstadoDelPedido");

                    b.ToTable("pedidos", (string)null);
                });

            modelBuilder.Entity("desafio_backend.Domain.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("person", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Apellido = "apellidoTest",
                            Nombre = "nombreTest"
                        },
                        new
                        {
                            PersonId = 2,
                            Apellido = "apellidoTest2",
                            Nombre = "nombreTest2"
                        },
                        new
                        {
                            PersonId = 3,
                            Apellido = "apellidoTest3",
                            Nombre = "nombreTest3"
                        });
                });

            modelBuilder.Entity("desafio_backend.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("desafio_backend.Domain.Entities.EstadoDelPedido", "EstadoDelPedidoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoDelPedido")
                        .HasConstraintName("FK_pedidos_estadoDelPedido");

                    b.Navigation("EstadoDelPedidoNavigation");
                });

            modelBuilder.Entity("desafio_backend.Domain.Entities.EstadoDelPedido", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
